/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.html.simpleparser.HTMLWorker;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author sony
 */
public class gendeit extends javax.swing.JFrame {
String user,promblem,diet,name,path,zipfile;
 double bmi;
 int age;
 double w;/**
     * Creates new form gendeit
     */
    public gendeit() {
        initComponents();
    }
    public gendeit(String u,String p) {
        initComponents();
        user=u;
        promblem=p;
        getContentPane().setBackground(Color.ORANGE);
        getvalues();
    }
void getvalues()
{
    try
    {
    myconnection obj=new myconnection();
    String q="select * from tbnewuser where user=?";
    PreparedStatement pst=obj.db.prepareStatement(q);
    ResultSet rs;
    pst.setString(1, user);
    rs=pst.executeQuery();
    if(rs.next())
    {
        age=rs.getInt("age");
        w=rs.getDouble("weight");
    }
    }
    catch(SQLException e)
    {
        System.out.println(e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        jLabel3 = new javax.swing.JLabel();
        button1 = new java.awt.Button();
        button3 = new java.awt.Button();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        button2 = new java.awt.Button();

        jLabel1.setText("jLabel1");

        label1.setText("label1");

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        button1.setBackground(new java.awt.Color(204, 0, 204));
        button1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        button1.setLabel("GENERATE DIET PLAN");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button3.setBackground(new java.awt.Color(204, 0, 204));
        button3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        button3.setLabel("MAIL DEIT PLAN");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/images1.png"))); // NOI18N
        jLabel5.setText("jLabel5");

        button2.setBackground(new java.awt.Color(153, 0, 153));
        button2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        button2.setLabel("SKIP MAIL");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(60, 60, 60)
                        .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(473, 473, 473)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jLabel4)
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed

        if(promblem.equals("OVERWEIGHT"))
{
    if(age<=10)
    {
        JOptionPane.showMessageDialog(this,"YOU DONT NEED TO FOLLOW DIET PLAN.JUST CONTROL BY AVOIDING OILY FOOD AND CONSULT DOCTOR ONCE");
        
    }
    else if(age>10&&age<=35){
    try
        {
            
            BufferedReader br=new BufferedReader(new FileReader("E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\index.html"));
            String str="";
            StringBuilder contentBuilder =new StringBuilder();
            while((str = br.readLine())!=null)
            {
                contentBuilder.append(str);
            }
            br.close();
            String content=contentBuilder.toString();
            content=content.replace("$MM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1MS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$ML", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + CURD + SALAD");
            content=content.replace("$2MS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$MD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$1TM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1TS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$1TL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$21TS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$1TD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$WM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1WS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$WL", " 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + CURD + VEG + SALAD");
            content=content.replace("$2WS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$WD"," 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$3TM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$13TS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$3TL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$23TS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$3TD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$FM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1FS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$FL", "VEG RICE + VEG + SALAD + CURD");
            content=content.replace("$2FS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$FD","VEG POHA + VEG + SALAD");
            content=content.replace("$SM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1SS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$SL", "1 PIECE PANEER SANDWICH + VEG + SALAD");
            content=content.replace("$2SS", "1 BOWL OF FRUITS");
            content=content.replace("$SD","BEFORE 7PM-PANEER VEG + SALAD + 1 TOAST");
            content=content.replace("$S1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1S1S", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$S1L", "VEG DALIA + VEG + SALAD + CURD");
             content=content.replace("$2S1S", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$S1D","BEFORE 7 PM-WHEAT FLAKES + MILK");
             
            content=content.replace("$NMM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NMS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NML", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + CURD + SALAD");
            content=content.replace("$2NMS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$NMD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$NTM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NTS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NTL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$2NTS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$NTD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$NWM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NWS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NWL", " 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + CURD + VEG + SALAD");
            content=content.replace("$2NWS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$NWD"," 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$3NTM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$31NTS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$3NTL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$32NTS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$3NTD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$NFM", "2 EGG WHITE + FRUITS");
            content=content.replace("$1NFS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NFL", "NON VEG RICE + VEG + SALAD + CURD");
            content=content.replace("$2NFS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$NFD","VEG POHA + VEG + SALAD");
            content=content.replace("$NSM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NSS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NSL", "1 PIECE TOAST + 1 OMMELETE + VEG + SALAD");
            content=content.replace("$1NSS", "1 BOWL OF FRUITS");
            content=content.replace("$NSD","BEFORE 7PM-2 EGG WHITE + SALAD + 1 TOAST");
            content=content.replace("$NS1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NS1S", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NS1L", "VEG DALIA + VEG + SALAD + CURD");
             content=content.replace("$2NS1S", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NS1D","BEFORE 7 PM-WHEAT FLAKES + MILK");
            
            name="E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETOVER.html";
            File f=new File(name);
            BufferedWriter bw =new BufferedWriter(new FileWriter(f));
            bw.write(content);
            bw.close();
            JOptionPane.showMessageDialog(this,"YOUR DIET PLAN HAS BEEN GENERATED");
            
             path = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETOVER.pdf";
            PdfWriter pdfWriter = null;
            
            // create a new document
            Document document = new Document();
            try {
                pdfWriter = PdfWriter.getInstance(document, new FileOutputStream(
                        path));
            } catch (DocumentException ex) {
              System.out.print("HTML file close problem:" + ex.getMessage());
            } catch (FileNotFoundException ex) {
                System.out.print("HTML file close problem:" + ex.getMessage());
            }
            document.open();
            HTMLWorker htmlWorker = new HTMLWorker(document);
            String str1 = "";
            StringBuilder contentBuilder1 = new StringBuilder();
            BufferedReader in = null;
            try {
                in = new BufferedReader(new FileReader(name));
                
                while ((str1 = in.readLine()) != null) {
                    
                    contentBuilder1.append(str1);
                    
                }
            } catch (IOException e) {
                System.out.print("HTML file close problem:" + e.getMessage());
            } 
                try {
                    in.close();
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
                String content1 = contentBuilder1.toString();
            try {
            htmlWorker.parse(new StringReader(content1));
        } catch (IOException ex) {
           System.out.print("HTML file close problem:" + ex.getMessage());
        }
             document.close();
           }
 catch(Exception i) 
               {
                   System.out.println(i.getMessage());
               } 
            zipfile = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETOVER.zip"; 
         String[] srcFiles = {name,path}; 
   try { 
             // create byte buffer 
             byte[] buffer = new byte[1024]; 
             FileOutputStream fos = new FileOutputStream(zipfile); 
            ZipOutputStream zos = new ZipOutputStream(fos); 
             for (int i=0; i < srcFiles.length; i++) { 
                 File srcFile = new File(srcFiles[i]); 
                 FileInputStream fis = new FileInputStream(srcFile); 
                 // begin writing a new ZIP entry, positions the stream to the start of the entry data 
                 zos.putNextEntry(new ZipEntry(srcFile.getName())); 
                 int length; 
                 while ((length = fis.read(buffer)) > 0) { 
                     zos.write(buffer, 0, length); 
                 } 
                 zos.closeEntry(); 
                 // close the InputStream 
                 fis.close(); 
             } 
             // close the ZipOutputStream 
    zos.close();          } 
         catch (IOException ioe) { 
             System.out.println("Error creating zip file: " + ioe); 
         } 
            
        }
       

   else if(age>35&&age<=60)
{
    try
        {
            BufferedReader br=new BufferedReader(new FileReader("E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\index.html"));
            String str="";
            StringBuilder contentBuilder =new StringBuilder();
            while((str = br.readLine())!=null)
            {
                contentBuilder.append(str);
            }
            br.close();
             String content=contentBuilder.toString();
            content=content.replace("$MM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1MS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$ML", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + CURD + SALAD");
            content=content.replace("$2MS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$MD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$1TM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1TS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$1TL", "2 TOAST + SOYA NUTRI VEG + SALAD + CURD");
            content=content.replace("$21TS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$1TD","BEFORE 7 PM- 1 TOAST + SOYA NUTRI VEG + SALAD");
            content=content.replace("$WM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1WS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$WL", " 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + CURD + VEG + SALAD");
            content=content.replace("$2WS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$WD"," 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$3TM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$13TS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$3TL", "2 TOAST + SOYA NUTRI VEG + SALAD + CURD");
            content=content.replace("$23TS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$3TD","BEFORE 7 PM- 1 TOAST + SOYA NUTRI VEG + SALAD");
            content=content.replace("$FM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1FS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$FL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$2FS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$FD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$SM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1SS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$SL", "2 PIECE SANDWICH + VEG + SALAD");
            content=content.replace("$2SS", "1 BOWL OF FRUITS");
            content=content.replace("$SD","BEFORE 7PM- VEG + SALAD + 1 TOAST");
            content=content.replace("$S1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1S1S", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$S1L", "VEG DALIA + VEG + SALAD + CURD");
             content=content.replace("$2S1S", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$S1D","BEFORE 7 PM-WHEAT FLAKES + MILK");
             
            content=content.replace("$NMM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NMS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NML", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + CURD + SALAD");
            content=content.replace("$2NMS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$NMD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$NTM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NTS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NTL", "2 EGG  + 1 TOAST + SALAD + CURD");
            content=content.replace("$2NTS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$NTD","2 EGG WHITE + VEG + SALAD");
            content=content.replace("$NWM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NWS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NWL", " 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + CURD + VEG + SALAD");
            content=content.replace("$2NWS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$NWD"," 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$3NTM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$31NTS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$3NTL", "2 EGG + 1 TOAST + SALAD + CURD");
            content=content.replace("$32NTS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$3NTD","2 EGG WHITE + VEG + SALAD");
            content=content.replace("$NFM", "2 EGG WHITE + FRUITS");
            content=content.replace("$1NFS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NFL", "NON VEG RICE + VEG + SALAD + CURD");
            content=content.replace("$2NFS", "1 BOWL OF FRUITS OR SOUP");
            content=content.replace("$NFD","VEG POHA + VEG + SALAD");
            content=content.replace("$NSM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NSS", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NSL", "1 PIECE TOAST + 1 OMMELETE + VEG + SALAD");
            content=content.replace("$1NSS", "1 BOWL OF FRUITS");
            content=content.replace("$NSD","BEFORE 7PM-2 EGG WHITE + SALAD + 1 TOAST");
            content=content.replace("$NS1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NS1S", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NS1L", "VEG DALIA + VEG + SALAD + CURD");
             content=content.replace("$2NS1S", "1 BOWL OF FRUITS OR 1 TOAST");
            content=content.replace("$NS1D","BEFORE 7 PM-WHEAT FLAKES + MILK");
            
            name="E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETOVER1.html";
            File f=new File(name);
            BufferedWriter bw =new BufferedWriter(new FileWriter(f));
            bw.write(content);
            bw.close();
            JOptionPane.showMessageDialog(this,"YOUR DIET PLAN HAS BEEN GENERATED");
            
            
            
        }
        
        catch(Exception e)
        {
            
        }
     path = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETOVER1.pdf";
            PdfWriter pdfWriter = null;
            
            // create a new document
            Document document = new Document();
            try {
                pdfWriter = PdfWriter.getInstance(document, new FileOutputStream(
                        path));
            } catch (DocumentException ex) {
              System.out.print("HTML file close problem:" + ex.getMessage());
            } catch (FileNotFoundException ex) {
                System.out.print("HTML file close problem:" + ex.getMessage());
            }
            document.open();
            HTMLWorker htmlWorker = new HTMLWorker(document);
            String str1 = "";
            StringBuilder contentBuilder1 = new StringBuilder();
            BufferedReader in = null;
            try {
                in = new BufferedReader(new FileReader(name));
                
                while ((str1 = in.readLine()) != null) {
                    
                    contentBuilder1.append(str1);
                    
                }
            } catch (IOException e) {
                System.out.print("HTML file close problem:" + e.getMessage());
            } 
                try {
                    in.close();
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
                String content1 = contentBuilder1.toString();
            try {
            htmlWorker.parse(new StringReader(content1));
        } catch (IOException ex) {
           System.out.print("HTML file close problem:" + ex.getMessage());
        }
             document.close();
           
 
            zipfile = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETOVER1.zip"; 
         String[] srcFiles = {name,path}; 
   try { 
             // create byte buffer 
             byte[] buffer = new byte[1024]; 
             FileOutputStream fos = new FileOutputStream(zipfile); 
            ZipOutputStream zos = new ZipOutputStream(fos); 
             for (int i=0; i < srcFiles.length; i++) { 
                 File srcFile = new File(srcFiles[i]); 
                 FileInputStream fis = new FileInputStream(srcFile); 
                 // begin writing a new ZIP entry, positions the stream to the start of the entry data 
                 zos.putNextEntry(new ZipEntry(srcFile.getName())); 
                 int length; 
                 while ((length = fis.read(buffer)) > 0) { 
                     zos.write(buffer, 0, length); 
                 } 
                 zos.closeEntry(); 
                 // close the InputStream 
                 fis.close(); 
             } 
             // close the ZipOutputStream 
    zos.close();          } 
         catch (IOException ioe) { 
             System.out.println("Error creating zip file: " + ioe); 
         } 
}  

   else if(age>61)
   {
        JOptionPane.showMessageDialog(this,"YOU DONT NEED TO FOLLOW DIET PLAN.JUST CONTROL BY AVOIDING OILY FOOD AND CONSULT DOCTOR ONCE");
   }
}

        else if(promblem.equals("UNDERWEIGHT"))
{
    if(age<=10)
    {
         JOptionPane.showMessageDialog(this,"YOU DONT NEED TO FOLLOW DIET PLAN.JUST CONSULT THE DOCTOR ONCE");
    }
    else if(age>11&&age<=35)
    {
    try
        {
            BufferedReader br=new BufferedReader(new FileReader("E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\index.html"));
            String str="";
            StringBuilder contentBuilder =new StringBuilder();
            while((str = br.readLine())!=null)
            {
                contentBuilder.append(str);
            }
            br.close();
            String content=contentBuilder.toString();
            content=content.replace("$MM", "1 GLASS MILK + 1 BOWL UPMA");
            content=content.replace("$1MS", "1 BOWL OF FRUITS");
            content=content.replace("$ML", "2 NORMAL CHAPPATIS + VEG + CURD + SALAD");
            content=content.replace("$2MS", "1 BOWL OF SOUP");
            content=content.replace("$MD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$1TM", "1 GLASS MILK + 1 BOWL OF POHA");
            content=content.replace("$1TS", "1 SANDWITCH");
            content=content.replace("$1TL", "2 NORMAL CHAPPATIS  + VEG + SALAD + CURD");
            content=content.replace("$21TS", "1 BOWL OF FRUITS ");
            content=content.replace("$1TD","2 NORMAL CHAPPATIS  + VEG + SALAD");
            content=content.replace("$WM", "1 PANNEER PARANTHA");
            content=content.replace("$1WS", "1 BOWL OF SOUP");
            content=content.replace("$WL", " 2 NORMAL CHAPPATIS + CURD + VEG + SALAD");
            content=content.replace("$2WS", "1 SANDWITCH");
            content=content.replace("$WD"," 2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$3TM", "1 ALOO PARANTHA");
            content=content.replace("$13TS", "1 BOWL OF FRUITS");
            content=content.replace("$3TL", "2 NORMAL CHAPPATIS + VEG + SALAD + CURD");
            content=content.replace("$23TS", "1 BOWL OF SOUP");
            content=content.replace("$3TD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$FM", "1 GLASS OF MILK + 1 BOWL OF UPMA");
            content=content.replace("$1FS","1 SANDWITCH");
            content=content.replace("$FL", "VEG RICE(BROWN) + VEG + SALAD + CURD");
            content=content.replace("$2FS", "1 BOWL OF FRUITS");
            content=content.replace("$FD","VEG POHA + VEG + SALAD");
            content=content.replace("$SM", "1 PANNER PARANTHA");
            content=content.replace("$1SS", "1 BOWL OF SOUP");
            content=content.replace("$SL", "1 PIECE PANEER SANDWICH + VEG + SALAD");
            content=content.replace("$2SS", "1 BOWL OF FRUITS");
            content=content.replace("$SD","PANEER VEG + SALAD + 1 TOAST");
            content=content.replace("$S1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1S1S", "1 BOWL OF SOUP");
            content=content.replace("$S1L", "VEG UPMA + VEG + SALAD + CURD");
             content=content.replace("$2S1S", "1 SANDWITCH");
            content=content.replace("$S1D","WHEAT FLAKES + MILK");
             
            content=content.replace("$NMM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NMS", "1 BOWL OF FRUITS");
            content=content.replace("$NML", "2 NORMAL CHAPPATIS  + VEG + CURD + SALAD");
            content=content.replace("$2NMS", "1 BOWL OF SOUP");
            content=content.replace("$NMD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$NTM", "1 GLASS MILK + 1 BOWL OF UPMA");
            content=content.replace("$1NTS", "1 SANDWITCH");
            content=content.replace("$NTL", "2 NORMAL CHAPPATIS + VEG + SALAD + CURD");
            content=content.replace("$2NTS", "2 EGG WHITE");
            content=content.replace("$NTD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$NWM", "1 GLASS MILK + 1 BOWL OF POHA");
            content=content.replace("$1NWS", "1 BOWL OF FRUITS");
            content=content.replace("$NWL", " 2 NORMAL CHAPPATIS + CURD + VEG + SALAD");
            content=content.replace("$2NWS", "1 BOWL OF SOUP");
            content=content.replace("$NWD"," 2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$3NTM", "1 GLASS MILK + 1 BREAD OMMELETE");
            content=content.replace("$31NTS", "1 SANDWITCH");
            content=content.replace("$3NTL", "2 NORMAL CHAPPATIS + VEG + SALAD + CURD");
            content=content.replace("$32NTS", "2 EGG WHITE");
            content=content.replace("$3NTD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$NFM", "2 EGG WHITE + FRUITS");
            content=content.replace("$1NFS", "1 BOWL OF FRUITS");
            content=content.replace("$NFL", "NON VEG RICE + VEG + SALAD + CURD");
            content=content.replace("$2NFS", "1 BOWL OF SOUP");
            content=content.replace("$NFD","VEG POHA + VEG + SALAD");
            content=content.replace("$NSM", "1 PANNER PARANTHA");
            content=content.replace("$1NSS", "1 SANDWITCH");
            content=content.replace("$NSL", "1 PIECE TOAST + 1 OMMELETE + VEG + SALAD");
            content=content.replace("$1NSS", "2 EGG WHITE");
            content=content.replace("$NSD","2 EGG WHITE + SALAD + 1 TOAST");
            content=content.replace("$NS1M", "1 ALOO PARANTHA");
            content=content.replace("$1NS1S", "1 BOWL OF FRUITS");
            content=content.replace("$NS1L", "VEG DALIA + VEG + SALAD + CURD");
             content=content.replace("$2NS1S", "1 BOWL OF SOUP");
            content=content.replace("$NS1D","WHEAT FLAKES + MILK");
            
            name="E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETUNDER.html";
            File f=new File(name);
            BufferedWriter bw =new BufferedWriter(new FileWriter(f));
            bw.write(content);
            bw.close();
            JOptionPane.showMessageDialog(this,"YOUR DIET PLAN HAS BEEN GENERATED");
            
            path = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETUNDER.pdf";
            PdfWriter pdfWriter = null;
            
            // create a new document
            Document document = new Document();
            try {
                pdfWriter = PdfWriter.getInstance(document, new FileOutputStream(
                        path));
            } catch (DocumentException ex) {
              System.out.print("HTML file close problem:" + ex.getMessage());
            } catch (FileNotFoundException ex) {
                System.out.print("HTML file close problem:" + ex.getMessage());
            }
            document.open();
            HTMLWorker htmlWorker = new HTMLWorker(document);
            String str1 = "";
            StringBuilder contentBuilder1 = new StringBuilder();
            BufferedReader in = null;
            try {
                in = new BufferedReader(new FileReader(name));
                
                while ((str1 = in.readLine()) != null) {
                    
                    contentBuilder1.append(str1);
                    
                }
            } catch (IOException e) {
                System.out.print("HTML file close problem:" + e.getMessage());
            } 
                try {
                    in.close();
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
                String content1 = contentBuilder1.toString();
            try {
            htmlWorker.parse(new StringReader(content1));
        } catch (IOException ex) {
           System.out.print("HTML file close problem:" + ex.getMessage());
        }
             document.close();
           }
 catch(Exception i) 
               {
                   System.out.println(i.getMessage());
               } 
            zipfile = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETUNDER.zip"; 
         String[] srcFiles = {name,path}; 
   try { 
             // create byte buffer 
             byte[] buffer = new byte[1024]; 
             FileOutputStream fos = new FileOutputStream(zipfile); 
            ZipOutputStream zos = new ZipOutputStream(fos); 
             for (int i=0; i < srcFiles.length; i++) { 
                 File srcFile = new File(srcFiles[i]); 
                 FileInputStream fis = new FileInputStream(srcFile); 
                 // begin writing a new ZIP entry, positions the stream to the start of the entry data 
                 zos.putNextEntry(new ZipEntry(srcFile.getName())); 
                 int length; 
                 while ((length = fis.read(buffer)) > 0) { 
                     zos.write(buffer, 0, length); 
                 } 
                 zos.closeEntry(); 
                 // close the InputStream 
                 fis.close(); 
             } 
             // close the ZipOutputStream 
    zos.close();          } 
         catch (IOException ioe) { 
             System.out.println("Error creating zip file: " + ioe); 
         } 
            
            
        }
        
         else if(age>35&&age<=60)
         {
    try
        {
            BufferedReader br=new BufferedReader(new FileReader("E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\index.html"));
            String str="";
            StringBuilder contentBuilder =new StringBuilder();
            while((str = br.readLine())!=null)
            {
                contentBuilder.append(str);
            }
            br.close();
            String content=contentBuilder.toString();
            content=content.replace("$MM", "1 GLASS MILK + 1 BOWL UPMA");
            content=content.replace("$1MS", "1 BOWL OF FRUITS");
            content=content.replace("$ML", "2 NORMAL CHAPPATIS + VEG + CURD + SALAD");
            content=content.replace("$2MS", "1 BOWL OF SOUP");
            content=content.replace("$MD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$1TM", "1 GLASS MILK + 1 BOWL OF POHA");
            content=content.replace("$1TS", "1 SANDWITCH");
            content=content.replace("$1TL", "2 NORMAL CHAPPATIS  + VEG + SALAD + CURD");
            content=content.replace("$21TS", "1 BOWL OF FRUITS ");
            content=content.replace("$1TD","2 NORMAL CHAPPATIS  + NON VEG DISH + SALAD");
            content=content.replace("$WM", "1 PANNEER PARANTHA");
            content=content.replace("$1WS", "1 BOWL OF SOUP");
            content=content.replace("$WL", " 2 NORMAL CHAPPATIS + CURD + VEG + SALAD");
            content=content.replace("$2WS", "1 SANDWITCH");
            content=content.replace("$WD"," 2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$3TM", "1 ALOO PARANTHA");
            content=content.replace("$13TS", "1 BOWL OF FRUITS");
            content=content.replace("$3TL", "2 NORMAL CHAPPATIS + VEG DISH + SALAD + CURD");
            content=content.replace("$23TS", "1 BOWL OF SOUP");
            content=content.replace("$3TD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$FM", "1 GLASS OF MILK + 1 BOWL OF UPMA");
            content=content.replace("$1FS","1 SANDWITCH");
            content=content.replace("$FL", "VEG RICE(BROWN) + VEG + SALAD + CURD");
            content=content.replace("$2FS", "1 BOWL OF FRUITS");
            content=content.replace("$FD","VEG POHA + VEG + SALAD");
            content=content.replace("$SM", "1 PANNER PARANTHA");
            content=content.replace("$1SS", "1 BOWL OF SOUP");
            content=content.replace("$SL", "1 PIECE PANEER SANDWICH + VEG + SALAD");
            content=content.replace("$2SS", "1 BOWL OF FRUITS");
            content=content.replace("$SD","PANEER VEG + SALAD + 1 TOAST");
            content=content.replace("$S1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1S1S", "1 BOWL OF SOUP");
            content=content.replace("$S1L", "VEG UPMA + VEG + SALAD + CURD");
             content=content.replace("$2S1S", "1 SANDWITCH");
            content=content.replace("$S1D","WHEAT FLAKES + MILK");
             
            content=content.replace("$NMM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NMS", "1 BOWL OF FRUITS");
            content=content.replace("$NML", "2 NORMAL CHAPPATIS  + VEG + CURD + SALAD");
            content=content.replace("$2NMS", "1 BOWL OF SOUP");
            content=content.replace("$NMD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$NTM", "1 GLASS MILK + 1 BOWL OF UPMA");
            content=content.replace("$1NTS", "1 SANDWITCH");
            content=content.replace("$NTL", "2 NORMAL CHAPPATIS + NON VEG DISH + SALAD + CURD");
            content=content.replace("$2NTS", "2 EGG WHITE");
            content=content.replace("$NTD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$NWM", "1 GLASS MILK + 1 BOWL OF POHA");
            content=content.replace("$1NWS", "1 BOWL OF FRUITS");
            content=content.replace("$NWL", " 2 NORMAL CHAPPATIS + CURD + NON VEG DISH + SALAD");
            content=content.replace("$2NWS", "1 BOWL OF SOUP");
            content=content.replace("$NWD"," 2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$3NTM", "1 GLASS MILK + 1 BREAD OMMELETE");
            content=content.replace("$31NTS", "1 SANDWITCH");
            content=content.replace("$3NTL", "2 NORMAL CHAPPATIS + VEG + SALAD + CURD");
            content=content.replace("$32NTS", "2 EGG WHITE");
            content=content.replace("$3NTD","2 NORMAL CHAPPATIS + NON VEG  DISH + SALAD");
            content=content.replace("$NFM", "2 EGG WHITE + FRUITS");
            content=content.replace("$1NFS", "1 BOWL OF FRUITS");
            content=content.replace("$NFL", "NON VEG RICE + VEG + SALAD + CURD");
            content=content.replace("$2NFS", "1 BOWL OF SOUP");
            content=content.replace("$NFD","VEG POHA + VEG + SALAD");
            content=content.replace("$NSM", "1 PANNER PARANTHA");
            content=content.replace("$1NSS", "1 SANDWITCH");
            content=content.replace("$NSL", "1 PIECE TOAST + 1 OMMELETE + VEG + SALAD");
            content=content.replace("$1NSS", "2 EGG WHITE");
            content=content.replace("$NSD","2 EGG WHITE + SALAD + 1 TOAST");
            content=content.replace("$NS1M", "1 ALOO PARANTHA");
            content=content.replace("$1NS1S", "1 BOWL OF FRUITS");
            content=content.replace("$NS1L", "VEG DALIA + VEG + SALAD + CURD");
             content=content.replace("$2NS1S", "1 BOWL OF SOUP");
            content=content.replace("$NS1D","WHEAT FLAKES + MILK");
            
            name="E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETUNDER1.html";
            File f=new File("name");
            BufferedWriter bw =new BufferedWriter(new FileWriter(f));
            bw.write(content);
            bw.close();
            JOptionPane.showMessageDialog(this,"YOUR DIET PLAN HAS BEEN GENERATED");
          
        
        
         path = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETUNDER1.pdf";
            PdfWriter pdfWriter = null;
            
            // create a new document
            Document document = new Document();
            try {
                pdfWriter = PdfWriter.getInstance(document, new FileOutputStream(
                        path));
            } catch (DocumentException ex) {
              System.out.print("HTML file close problem:" + ex.getMessage());
            } catch (FileNotFoundException ex) {
                System.out.print("HTML file close problem:" + ex.getMessage());
            }
            document.open();
            HTMLWorker htmlWorker = new HTMLWorker(document);
            String str1 = "";
            StringBuilder contentBuilder1 = new StringBuilder();
            BufferedReader in = null;
            try {
                in = new BufferedReader(new FileReader(name));
                
                while ((str1 = in.readLine()) != null) {
                    
                    contentBuilder1.append(str1);
                    
                }
            } catch (IOException e) {
                System.out.print("HTML file close problem:" + e.getMessage());
            } 
                try {
                    in.close();
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
                String content1 = contentBuilder1.toString();
            try {
            htmlWorker.parse(new StringReader(content1));
        } catch (IOException ex) {
           System.out.print("HTML file close problem:" + ex.getMessage());
        }
             document.close();
           }
 catch(Exception i) 
               {
                   System.out.println(i.getMessage());
               } 
            zipfile = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETUNDER1.zip"; 
         String[] srcFiles = {name,path}; 
   try { 
             // create byte buffer 
             byte[] buffer = new byte[1024]; 
             FileOutputStream fos = new FileOutputStream(zipfile); 
            ZipOutputStream zos = new ZipOutputStream(fos); 
             for (int i=0; i < srcFiles.length; i++) { 
                 File srcFile = new File(srcFiles[i]); 
                 FileInputStream fis = new FileInputStream(srcFile); 
                 // begin writing a new ZIP entry, positions the stream to the start of the entry data 
                 zos.putNextEntry(new ZipEntry(srcFile.getName())); 
                 int length; 
                 while ((length = fis.read(buffer)) > 0) { 
                     zos.write(buffer, 0, length); 
                 } 
                 zos.closeEntry(); 
                 // close the InputStream 
                 fis.close(); 
             } 
             // close the ZipOutputStream 
    zos.close();          } 
         catch (IOException ioe) { 
             System.out.println("Error creating zip file: " + ioe); 
         } 
            
}
          else if(age>61)
   {
        JOptionPane.showMessageDialog(this,"YOU DONT NEED TO FOLLOW DIET PLAN.JUST CONSULT DOCTOR ONCE");
   }
}
        else if(promblem.equals("NORMAL"))
{
    if(age<=10)
    {
         JOptionPane.showMessageDialog(this,"YOU DONT NEED TO FOLLOW DIET PLAN.JUST AVIOD OILY FOOD");
    }
    else if(age>11&&age<=35)
    {
    try
        {
            BufferedReader br=new BufferedReader(new FileReader("E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\index.html"));
            String str="";
            StringBuilder contentBuilder =new StringBuilder();
            while((str = br.readLine())!=null)
            {
                contentBuilder.append(str);
            }
            br.close();
            String content=contentBuilder.toString();
           
            content=content.replace("$MM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1MS", "1 BOWL OF FRUITS");
            content=content.replace("$ML", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + CURD + SALAD");
            content=content.replace("$2MS", "1 BOWL OF SOUP");
            content=content.replace("$MD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$1TM", "1 GLASS MILK + 1 BOWL OF POHA");
            content=content.replace("$1TS", "1 SANDWITCH");
            content=content.replace("$1TL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$21TS", "1 BOWL OF FRUITS ");
            content=content.replace("$1TD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + NON VEG DISH + SALAD");
            content=content.replace("$WM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1WS", "1 BOWL OF SOUP");
            content=content.replace("$WL", " 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + CURD + VEG + SALAD");
            content=content.replace("$2WS", "1 SANDWITCH");
            content=content.replace("$WD"," 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$3TM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$13TS", "1 BOWL OF FRUITS");
            content=content.replace("$3TL", "2 NORMAL CHAPPATIS + VEG + SALAD + CURD");
            content=content.replace("$23TS", "1 BOWL OF SOUP");
            content=content.replace("$3TD","BEFORE 7 PM-1 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$FM", "1 GLASS OF MILK + FRUITS");
            content=content.replace("$1FS","1 SANDWITCH");
            content=content.replace("$FL", "VEG RICE(BROWN) + VEG + SALAD + CURD");
            content=content.replace("$2FS", "1 BOWL OF FRUITS");
            content=content.replace("$FD","VEG POHA + VEG + SALAD");
            content=content.replace("$SM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1SS", "1 BOWL OF SOUP");
            content=content.replace("$SL", "1 PIECE PANEER SANDWICH + VEG + SALAD");
            content=content.replace("$2SS", "1 BOWL OF FRUITS");
            content=content.replace("$SD","BEFORE 7 PM-PANEER VEG + SALAD + 1 TOAST");
            content=content.replace("$S1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1S1S", "1 BOWL OF SOUP");
            content=content.replace("$S1L", "VEG DALIA + VEG + SALAD + CURD");
            content=content.replace("$2S1S", "1 SANDWITCH");
            content=content.replace("$S1D","BEFORE 7 PM-WHEAT FLAKES + MILK");
             
            content=content.replace("$NMM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NMS", "1 BOWL OF FRUITS");
            content=content.replace("$NML", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + CURD + SALAD");
            content=content.replace("$2NMS", "1 BOWL OF SOUP");
            content=content.replace("$NMD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$NTM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NTS", "1 SANDWITCH");
            content=content.replace("$NTL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$2NTS", "2 EGG WHITE");
            content=content.replace("$NTD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA)  + VEG + SALAD");
            content=content.replace("$NWM", "1 GLASS MILK + 1 BOWL OF POHA");
            content=content.replace("$1NWS", "1 BOWL OF FRUITS");
            content=content.replace("$NWL", " 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + CURD + VEG + SALAD");
            content=content.replace("$2NWS", "1 BOWL OF SOUP");
            content=content.replace("$NWD"," 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$3NTM", "1 GLASS MILK + 1 BREAD OMMELETE");
            content=content.replace("$31NTS", "1 SANDWITCH");
            content=content.replace("$3NTL", "1 NORMAL CHAPPATIS + VEG + SALAD + CURD");
            content=content.replace("$32NTS", "2 EGG WHITE");
            content=content.replace("$3NTD","1 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$NFM", "2 EGG WHITE + FRUITS");
            content=content.replace("$1NFS", "1 BOWL OF FRUITS");
            content=content.replace("$NFL", "NON VEG RICE + VEG + SALAD + CURD");
            content=content.replace("$2NFS", "1 BOWL OF SOUP");
            content=content.replace("$NFD","VEG POHA + VEG + SALAD");
            content=content.replace("$NSM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NSS", "1 SANDWITCH");
            content=content.replace("$NSL", "1 PIECE TOAST + 1 OMMELETE + VEG + SALAD");
            content=content.replace("$1NSS", "2 EGG WHITE");
            content=content.replace("$NSD","BEFORE 7 PM-2 EGG WHITE + SALAD + 1 TOAST");
            content=content.replace("$NS1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NS1S", "1 BOWL OF FRUITS");
            content=content.replace("$NS1L", "VEG DALIA + VEG + SALAD + CURD");
            content=content.replace("$2NS1S", "1 BOWL OF SOUP");
            content=content.replace("$NS1D","BEFORE 7 PM-WHEAT FLAKES + MILK");
            
            name="E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETNORMAL.html";
            File f=new File(name);
            BufferedWriter bw =new BufferedWriter(new FileWriter(f));
            bw.write(content);
            bw.close();
            JOptionPane.showMessageDialog(this,"YOUR DIET PLAN HAS BEEN GENERATED");
            
         
        
       
         path = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETNORMAL.pdf";
            PdfWriter pdfWriter = null;
            
            // create a new document
            Document document = new Document();
            try {
                pdfWriter = PdfWriter.getInstance(document, new FileOutputStream(
                        path));
            } catch (DocumentException ex) {
              System.out.print("HTML file close problem:" + ex.getMessage());
            } catch (FileNotFoundException ex) {
                System.out.print("HTML file close problem:" + ex.getMessage());
            }
            document.open();
            HTMLWorker htmlWorker = new HTMLWorker(document);
            String str1 = "";
            StringBuilder contentBuilder1 = new StringBuilder();
            BufferedReader in = null;
            try {
                in = new BufferedReader(new FileReader(name));
                
                while ((str1 = in.readLine()) != null) {
                    
                    contentBuilder1.append(str1);
                    
                }
            } catch (IOException e) {
                System.out.print("HTML file close problem:" + e.getMessage());
            } 
                try {
                    in.close();
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
                String content1 = contentBuilder1.toString();
            try {
            htmlWorker.parse(new StringReader(content1));
        } catch (IOException ex) {
           System.out.print("HTML file close problem:" + ex.getMessage());
        }
             document.close();
           }
 catch(Exception i) 
               {
                   System.out.println(i.getMessage());
               } 
            zipfile = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETNORMAL.zip"; 
         String[] srcFiles = {name,path}; 
   try { 
             // create byte buffer 
             byte[] buffer = new byte[1024]; 
             FileOutputStream fos = new FileOutputStream(zipfile); 
            ZipOutputStream zos = new ZipOutputStream(fos); 
             for (int i=0; i < srcFiles.length; i++) { 
                 File srcFile = new File(srcFiles[i]); 
                 FileInputStream fis = new FileInputStream(srcFile); 
                 // begin writing a new ZIP entry, positions the stream to the start of the entry data 
                 zos.putNextEntry(new ZipEntry(srcFile.getName())); 
                 int length; 
                 while ((length = fis.read(buffer)) > 0) { 
                     zos.write(buffer, 0, length); 
                 } 
                 zos.closeEntry(); 
                 // close the InputStream 
                 fis.close(); 
             } 
             // close the ZipOutputStream 
    zos.close();          } 
         catch (IOException ioe) { 
             System.out.println("Error creating zip file: " + ioe); 
         } 
            
}
         else if(age>=36&&age<=60)
{
    try
        {
            BufferedReader br=new BufferedReader(new FileReader("E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\index.html"));
            String str="";
            StringBuilder contentBuilder =new StringBuilder();
            while((str = br.readLine())!=null)
            {
                contentBuilder.append(str);
            }
            br.close();
            String content=contentBuilder.toString();
             content=content.replace("$MM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1MS", "1 BOWL OF FRUITS");
            content=content.replace("$ML", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + CURD + SALAD");
            content=content.replace("$2MS", "1 BOWL OF SOUP");
            content=content.replace("$MD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$1TM", "1 GLASS MILK + 1 BOWL OF POHA");
            content=content.replace("$1TS", "1 SANDWITCH");
            content=content.replace("$1TL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$21TS", "1 BOWL OF FRUITS ");
            content=content.replace("$1TD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + NON VEG DISH + SALAD");
            content=content.replace("$WM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1WS", "1 BOWL OF SOUP");
            content=content.replace("$WL", " 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + CURD + VEG + SALAD");
            content=content.replace("$2WS", "1 SANDWITCH");
            content=content.replace("$WD"," 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$3TM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$13TS", "1 BOWL OF FRUITS");
            content=content.replace("$3TL", "2 NORMAL CHAPPATIS + VEG + SALAD + CURD");
            content=content.replace("$23TS", "1 BOWL OF SOUP");
            content=content.replace("$3TD","2 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$FM", "1 GLASS OF MILK + FRUITS");
            content=content.replace("$1FS","1 SANDWITCH");
            content=content.replace("$FL", "VEG RICE(BROWN) + VEG + SALAD + CURD");
            content=content.replace("$2FS", "1 BOWL OF FRUITS");
            content=content.replace("$FD","VEG POHA + VEG + SALAD");
            content=content.replace("$SM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1SS", "1 BOWL OF SOUP");
            content=content.replace("$SL", "1 PIECE PANEER SANDWICH + VEG + SALAD");
            content=content.replace("$2SS", "1 BOWL OF FRUITS");
            content=content.replace("$SD","PANEER VEG + SALAD + 1 TOAST");
            content=content.replace("$S1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1S1S", "1 BOWL OF SOUP");
            content=content.replace("$S1L", "VEG DALIA + VEG + SALAD + CURD");
            content=content.replace("$2S1S", "1 SANDWITCH");
            content=content.replace("$S1D","WHEAT FLAKES + MILK");
             
            content=content.replace("$NMM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NMS", "1 BOWL OF FRUITS");
            content=content.replace("$NML", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + NON VEG + CURD + SALAD");
            content=content.replace("$2NMS", "1 BOWL OF SOUP");
            content=content.replace("$NMD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$NTM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NTS", "1 SANDWITCH");
            content=content.replace("$NTL", "2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD + CURD");
            content=content.replace("$2NTS", "2 EGG WHITE");
            content=content.replace("$NTD","2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA)  + NON VEG + SALAD");
            content=content.replace("$NWM", "1 GLASS MILK + 1 BOWL OF POHA");
            content=content.replace("$1NWS", "1 BOWL OF FRUITS");
            content=content.replace("$NWL", " 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + CURD + VEG + SALAD");
            content=content.replace("$2NWS", "1 BOWL OF SOUP");
            content=content.replace("$NWD"," 2 CHAPPATIS (50% BRAN + 50% NORMAL ATTA) + VEG + SALAD");
            content=content.replace("$3NTM", "1 GLASS MILK + 1 BREAD OMMELETE");
            content=content.replace("$31NTS", "1 SANDWITCH");
            content=content.replace("$3NTL", "2 NORMAL CHAPPATIS + VEG + SALAD + CURD");
            content=content.replace("$32NTS", "2 EGG WHITE");
            content=content.replace("$3NTD","1 NORMAL CHAPPATIS + VEG + SALAD");
            content=content.replace("$NFM", "2 EGG WHITE + FRUITS");
            content=content.replace("$1NFS", "1 BOWL OF FRUITS");
            content=content.replace("$NFL", "NON VEG RICE + VEG + SALAD + CURD");
            content=content.replace("$2NFS", "1 BOWL OF SOUP");
            content=content.replace("$NFD","VEG POHA + VEG + SALAD");
            content=content.replace("$NSM", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NSS", "1 SANDWITCH");
            content=content.replace("$NSL", "1 PIECE TOAST + 1 OMMELETE + VEG + SALAD");
            content=content.replace("$1NSS", "2 EGG WHITE");
            content=content.replace("$NSD","2 EGG WHITE + SALAD + 1 TOAST");
            content=content.replace("$NS1M", "1 GLASS MILK + 2 PIECE TOAST + FRUITS");
            content=content.replace("$1NS1S", "1 BOWL OF FRUITS");
            content=content.replace("$NS1L", "VEG DALIA + VEG + SALAD + CURD");
            content=content.replace("$2NS1S", "1 BOWL OF SOUP");
            content=content.replace("$NS1D","WHEAT FLAKES + MILK");
           
            name="E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETNORMAL1.html";
            File f=new File(name);
            BufferedWriter bw =new BufferedWriter(new FileWriter(f));
            bw.write(content);
            bw.close();
            JOptionPane.showMessageDialog(this,"YOUR DIET PLAN HAS BEEN GENERATED");
            
            
            
        }
        
        catch(Exception e)
        {
            
        }
     path = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETNORMAL1.pdf";
            PdfWriter pdfWriter = null;
            
            // create a new document
            Document document = new Document();
            try {
                pdfWriter = PdfWriter.getInstance(document, new FileOutputStream(
                        path));
            } catch (DocumentException ex) {
              System.out.print("HTML file close problem:" + ex.getMessage());
            } catch (FileNotFoundException ex) {
                System.out.print("HTML file close problem:" + ex.getMessage());
            }
            document.open();
            HTMLWorker htmlWorker = new HTMLWorker(document);
            String str1 = "";
            StringBuilder contentBuilder1 = new StringBuilder();
            BufferedReader in = null;
            try {
                in = new BufferedReader(new FileReader(name));
                
                while ((str1 = in.readLine()) != null) {
                    
                    contentBuilder1.append(str1);
                    
                }
            } catch (IOException e) {
                System.out.print("HTML file close problem:" + e.getMessage());
            } 
                try {
                    in.close();
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
                String content1 = contentBuilder1.toString();
            try {
            htmlWorker.parse(new StringReader(content1));
        } catch (IOException ex) {
           System.out.print("HTML file close problem:" + ex.getMessage());
        }
             document.close();
           
 
            zipfile = "E:\\JAVA\\PROJECT\\NP\\HealthandFitness\\DIETNORMAL1.zip"; 
         String[] srcFiles = {name,path}; 
   try { 
             // create byte buffer 
             byte[] buffer = new byte[1024]; 
             FileOutputStream fos = new FileOutputStream(zipfile); 
            ZipOutputStream zos = new ZipOutputStream(fos); 
             for (int i=0; i < srcFiles.length; i++) { 
                 File srcFile = new File(srcFiles[i]); 
                 FileInputStream fis = new FileInputStream(srcFile); 
                 // begin writing a new ZIP entry, positions the stream to the start of the entry data 
                 zos.putNextEntry(new ZipEntry(srcFile.getName())); 
                 int length; 
                 while ((length = fis.read(buffer)) > 0) { 
                     zos.write(buffer, 0, length); 
                 } 
                 zos.closeEntry(); 
                 // close the InputStream 
                 fis.close(); 
             } 
             // close the ZipOutputStream 
    zos.close();          } 
         catch (IOException ioe) { 
             System.out.println("Error creating zip file: " + ioe); 
         } 
            
}
     else if(age>61)
   {
        JOptionPane.showMessageDialog(this,"YOU DONT NEED TO FOLLOW DIET PLAN.");
        return;
   }
    if(name.length()==0)
    {
         JOptionPane.showMessageDialog(this,"YOU DONT NEED TO FOLLOW DIET PLAN.");
        return;
    }
// TODO add your handling code here:
    }//GEN-LAST:event_button1ActionPerformed
    try
 {
     myconnection obj=new myconnection();
     String q="insert into tbdiet(user,name,pdfname,zip) values(?,?,?,?)";
     PreparedStatement pst=obj.db.prepareStatement(q);
     pst.setString(1, user);
     pst.setString(2, name);
    pst.setString(3, path);
    pst.setString(4, zipfile);
     pst.executeUpdate();
 }
 catch(SQLException e)
 {
     System.out.println(e.getMessage());
 }
    }
    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
dietmail obj=new dietmail(user,promblem,diet);
obj.setVisible(true);
this.setVisible(false);
   
// TODO add your handling code here:
    }//GEN-LAST:event_button3ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
feedback obj=new feedback();
obj.setVisible(true);
this.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_button2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gendeit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gendeit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gendeit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gendeit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gendeit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
